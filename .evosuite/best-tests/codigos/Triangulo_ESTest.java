/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 28 05:17:42 GMT 2021
 */

package codigos;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import codigos.Triangulo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Triangulo_ESTest extends Triangulo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = Triangulo.classificaTriangulo(2843, 4633, 4131);
      assertEquals("ESCALENO", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = Triangulo.classificaTriangulo(2843, 4633, 2843);
      assertEquals("ISOSCELES", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = Triangulo.classificaTriangulo(4032, 4032, 842);
      assertEquals("ISOSCELES", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = Triangulo.classificaTriangulo(2, 4, 2);
      assertEquals("NAO FORMA TRIANGULO", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = Triangulo.classificaTriangulo(1, 1, 0);
      assertEquals("NAO FORMA TRIANGULO", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = Triangulo.classificaTriangulo(1, 1164, 0);
      assertEquals("NAO FORMA TRIANGULO", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      try { 
        Triangulo.classificaTriangulo(1, 0, 1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // lado invalido
         //
         verifyException("codigos.Triangulo", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      try { 
        Triangulo.classificaTriangulo(0, (-392), (-392));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // lado invalido
         //
         verifyException("codigos.Triangulo", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = Triangulo.classificaTriangulo(3719, 1659, 2453);
      assertEquals("ESCALENO", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = Triangulo.classificaTriangulo(4, 4, 4);
      assertEquals("EQUILATERO", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = Triangulo.classificaTriangulo(1, 1, 2);
      assertEquals("ISOSCELES", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = Triangulo.classificaTriangulo(31, 31, 2453);
      assertEquals("NAO FORMA TRIANGULO", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = Triangulo.classificaTriangulo(2453, 31, 31);
      assertEquals("NAO FORMA TRIANGULO", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      try { 
        Triangulo.classificaTriangulo(1, 1, (-3218));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // lado invalido
         //
         verifyException("codigos.Triangulo", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      try { 
        Triangulo.classificaTriangulo(1, (-1063), 1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // lado invalido
         //
         verifyException("codigos.Triangulo", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = Triangulo.classificaTriangulo(1, 233, 233);
      assertEquals("ISOSCELES", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      try { 
        Triangulo.classificaTriangulo((-478), 233, 1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // lado invalido
         //
         verifyException("codigos.Triangulo", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Triangulo triangulo0 = new Triangulo();
  }
}
